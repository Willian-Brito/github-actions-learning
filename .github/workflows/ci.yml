name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  versioning:
    runs-on: ubuntu-latest
    name: Versioning

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0 
      
      - uses:  codacy/git-version@2.8.3
        id: version
        with:
          release-branch: main
          prefix: v

      - name: Repository Tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::notice:: ${{ steps.version.outputs.version }}"
          git config --global user.email "${{ github.actor }}"@users.noreply.github.com
          git config --global user.name "${{ github.actor }}"
          git tag -a "${{ steps.version.outputs.version }}" -m "Release ${{ steps.version.outputs.version }}"
          git push --tags
        if: github.ref == 'refs/heads/main'

  backend-build-and-test:
    needs: versioning
    runs-on: ubuntu-latest
    name: Backend Build and Test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          cache: true
          cache-dependency-path: ./src/**/packages.lock.json
      
      - name: Restore
        run: |
          dotnet restore ./src/Todo.Api.sln

      - name: Build
        run: |          
          dotnet build --no-restore --configuration Release ./src/Todo.Api.sln          
      
      - name: Test
        run: |                    
          dotnet test ./src/Todo.Api.sln --no-restore --no-build --configuration Release --logger trx --results-directory "TestResults"

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: TestResults  

  backend-lint:
    needs: versioning
    runs-on: ubuntu-latest
    name: Backend Lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - uses: super-linter/super-linter@v8
        env:
          DEFAULT_BRANCH: "main"
          VALIDATE_ALL_CODEBASE: "false"
          VALIDATE_YAML: "true"
          VALIDATE_CSHARP: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  frontend-build-and-test:
    needs: versioning
    runs-on: ubuntu-latest
    name: Frontend Build and Test
    defaults:
      run:
        working-directory: ./src/web

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: ./src/web

      - name: Install dependencies        
        run: |
          npm ci
      
      - name: Test        
        run: |
          npm run lint

      - name: Build
        run: |
          npm run build

  frontend-lint:
    needs: versioning
    runs-on: ubuntu-latest
    name: Frontend Lint
    defaults:
      run:
        working-directory: ./src/web

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: ./src/web

      - name: Install dependencies        
        run: |
          npm ci
      
      - name: Lint        
        run: |
          npm run lint

  sca:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Code
          uses: actions/checkout@v4
        
        - name: Setup Java (required for Dependency-Check)
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'

        - name: Run OWASP Dependencyâ€‘Check
          
          uses: dependency-check/Dependency-Check_Action@main
          id: depcheck
          with:
            project: '${{ github.repository }}'
            path: '.'
            format: 'HTML'
            out: 'dependency-reports'
            args: |              
              --scan ./src/api
          env:
            JAVA_HOME: /opt/jdk

        - name: Upload vulnerability report
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: dependency-check-report
            path: dependency-reports/
  
  sast:
    needs: versioning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    
    strategy:      
      matrix:
        include:          
          - name: Backend
          - language: csharp
            build-mode: autobuild          
          - name: Frontend
          - language: javascript
            build-mode: none

    steps:
      - uses: actions/checkout@v4

      - uses: github/codeql-action/init@v3   
        name: Initialize CodeQL - ${{ matrix.name }}     
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - uses: github/codeql-action/analyze@v3   
        name: Analyze CodeQL - ${{ matrix.name }}     
        with:
          category: '/language:${{ matrix.language }}'